const C = {
  ADD_ICE_CANDIDATE: "addIceCandidate",
  CONFERENCE_FLOOR_CHANGED: "conferenceFloorChanged",
  CONFERENCE_FLOOR: "conferenceFloor",
  CONNECT: "connect",
  CONNECTED: "connected",
  CONTENT_FLOOR_CHANGED: "contentFloorChanged",
  CONTENT_FLOOR: "contentFloor",
  DISCONNECT: "disconnect",
  DISCONNECTED: "disconnected",
  DTMF: "dtmf",
  ERROR: "errorMessage",
  GET_CONFERENCE_FLOOR: "getConferenceFloor",
  GET_CONTENT_FLOOR: "getContentFloor",
  GET_ROOMS: "getRooms",
  GET_USER_MEDIAS: "getUserMedias",
  GET_USERS: "getUsers",
  ICE_CANDIDATE_ADDED: "iceCandidateAdded",
  JOIN: "join",
  JOINED: "joined",
  LEAVE: "leave",
  LEFT: "left",
  MEDIA_CONNECTED: "mediaConnected",
  MEDIA_DISCONNECTED: "mediaDisconnected",
  MEDIA_RENEGOTIATED: "mediaRenegotiated",
  MEDIA_STATE: "mediaState",
  MUTE: "mute",
  MUTED: "muted",
  ON_EVENT: "onEvent",
  ON_ICE_CANDIDATE: "onIceCandidate",
  PUBLISH: "publish",
  PUBLISH_AND_SUBSCRIBE: "publishAndSubscribe",
  PUBLISHED: "published",
  PUBLISHED_AND_SUBSCRIBED: "publishedAndSubscribed",
  RELEASE_CONFERENCE_FLOOR: "releaseConferenceFloor",
  RELEASE_CONTENT_FLOOR: "releaseContentFloor",
  ROOM_CREATED: "roomCreated",
  ROOM_DESTROYED: "roomDestroyed",
  ROOMS_LIST: "roomsList",
  SET_CONFERENCE_FLOOR: "setConferenceFloor",
  SET_CONTENT_FLOOR: "setContentFloor",
  SET_VOLUME: "setVolume",
  START_TALKING: "startTalking",
  STOP_TALKING: "stopTalking",
  SUBSCRIBE: "subscribe",
  SUBSCRIBED: "subscribed",
  UNMUTE: "unmute",
  UNMUTED: "unmuted",
  UNPUBLISH: "unpublish",
  UNPUBLISH_AND_UNSUBSCRIBE: "unpublishAndUnsubcribe",
  UNPUBLISHED: "unpublished",
  UNPUBLISHED_AND_UNSUBSCRIBED: "unpublishedAndUnsubscribed",
  UNSUBSCRIBE: "unsubscribe",
  UNSUBSCRIBED: "unsubscribed",
  USER_JOINED: "userJoined",
  USER_LEFT: "userLeft",
  USER_MEDIAS: "userMedias",
  USERS_LIST: "usersList",
  VOLUME_CHANGED: "volumeChanged",
  START_RECORDING: "startRecording",
  STOP_RECORDING: "stopRecording",
  RECORDING_STARTED: "recordingStarted",
  RECORDING_STOPPED: "recordingStopped",
  SET_STRATEGY: "setStrategy",
  GET_STRATEGY: "getStrategy",
  CURRENT_STRATEGY: "currentStrategy",
  DTMF_SENT: "dtmfSent",
  DTMF_RECEIVED: "dtmfReceived",
  SUBSCRIBED_TO: "subscribedTo",
  REQUEST_KEYFRAME: "requestKeyframe",
  KEYFRAME_REQUESTED: "keyframeRequested",
  KEYFRAME_NEEDED: "keyframeNeeded",
  BITRATE_CHANGE: "bitrateChange",
  GET_MEDIAS: "getMedias",
  GET_MEDIAS_RESPONSE: "getMediasResponse",
}

const MEDIA_TYPES = {
  RTP: "RTP",
  WebRTC: "WebRTC",
  URI: "URI",
  RECORDING: "RECORDING",
}

const MEMBER_TYPES = {
  ROOM: "room",
  USER: "user",
  MEDIA_SESSION: "mediaSession",
  MEDIA: "media",
}

const EVENT_UNREGISTER_MAP = {
  [C.ROOM_DESTROYED]: [C.USER_JOINED, C.USER_LEFT, C.MEDIA_CONNECTED, C.CONFERENCE_FLOOR_CHANGED, C.CONTENT_FLOOR_CHANGED, C.ROOM_DESTROYED],
  [C.MEDIA_DISCONNECTED]: [C.MEDIA_STATE, C.MUTED, C.UNMUTED, C.VOLUME_CHANGED, C.ON_ICE_CANDIDATE, C.MEDIA_DISCONNECTED, C.START_TALKING, C.STOP_TALKING, C.DTMF_RECEIVED, C.SUBSCRIBED_TO, C.KEYFRAME_NEEDED, C.BITRATE_CHANGE, C.MEDIA_RENEGOTIATED],
  [C.UNPUBLISHED]: [C.MEDIA_STATE, C.MUTED, C.UNMUTED, C.VOLUME_CHANGED, C.ON_ICE_CANDIDATE, C.MEDIA_DISCONNECTED, C.START_TALKING, C.STOP_TALKING, C.DTMF_RECEIVED, C.SUBSCRIBED_TO, C.KEYFRAME_NEEDED, C.BITRATE_CHANGE, C.MEDIA_RENEGOTIATED],
  [C.UNSUBSCRIBED]: [C.MEDIA_STATE, C.MUTED, C.UNMUTED, C.VOLUME_CHANGED, C.ON_ICE_CANDIDATE, C.MEDIA_DISCONNECTED,  C.START_TALKING, C.STOP_TALKING, C.DTMF_RECEIVED, C.SUBSCRIBED_TO, C.KEYFRAME_NEEDED, C.BITRATE_CHANGE, C.MEDIA_RENEGOTIATED],
  [C.UNPUBLISHED_AND_UNSUBSCRIBED]: [C.MEDIA_STATE, C.MUTED, C.UNMUTED, C.VOLUME_CHANGED, C.ON_ICE_CANDIDATE, C.MEDIA_DISCONNECTED,  C.START_TALKING, C.STOP_TALKING, C.DTMF_RECEIVED, C.SUBSCRIBED_TO, C.KEYFRAME_NEEDED, C.BITRATE_CHANGE, C.MEDIA_RENEGOTIATED]
}

module.exports = {
  ...C,
  EVENT_UNREGISTER_MAP,
  MEMBER_TYPES,
  MEDIA_TYPES,
};
